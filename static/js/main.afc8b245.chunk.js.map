{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Auxx/Auxx.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","store/reducers/burgerBuilder.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","console","log","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","sum","disabledInfo","ings","orderSummary","onIngredientAdded","onIngredientRemoved","updatePurchaseState","totalPrice","connect","dispatch","ingName","ingredientName","checkoutSummary","CheckoutSummary","width","height","margin","checkoutCancelled","checkoutContinue","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipcode","minLength","maxLength","country","email","deliverMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementidentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","inputIdentifiers","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelHandler","goBack","checkoutContinuedHandler","replace","path","match","url","component","amount","ingredientOutput","ig","display","border","padding","classname","Order","Number","parseFloat","orders","get","fetchOrders","data","err","Orders","App","Boolean","window","location","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","burgerBuilderReducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afc8b245.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__-has-base64-5-\",\"BreadTop\":\"BurgerIngredient__BreadTop__-has-base64-5-\",\"Seeds1\":\"BurgerIngredient__Seeds1__-has-base64-5-\",\"Seeds2\":\"BurgerIngredient__Seeds2__-has-base64-5-\",\"Meat\":\"BurgerIngredient__Meat__-has-base64-5-\",\"Cheese\":\"BurgerIngredient__Cheese__-has-base64-5-\",\"Salad\":\"BurgerIngredient__Salad__-has-base64-5-\",\"Bacon\":\"BurgerIngredient__Bacon__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__-has-base64-5-\",\"Open\":\"SideDrawer__Open__-has-base64-5-\",\"Close\":\"SideDrawer__Close__-has-base64-5-\",\"Logo\":\"SideDrawer__Logo__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__-has-base64-5-\",\"Label\":\"BuildControl__Label__-has-base64-5-\",\"Less\":\"BuildControl__Less__-has-base64-5-\",\"More\":\"BuildControl__More__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__-has-base64-5-\",\"Label\":\"Input__Label__-has-base64-5-\",\"InputElement\":\"Input__InputElement__-has-base64-5-\",\"Invalid\":\"Input__Invalid__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__-has-base64-5-\",\"Logo\":\"Toolbar__Logo__-has-base64-5-\",\"DesktopOnly\":\"Toolbar__DesktopOnly__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__-has-base64-5-\",\"active\":\"NavigationItem__active__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__-has-base64-5-\",\"OrderButton\":\"BuildControls__OrderButton__-has-base64-5-\",\"enable\":\"BuildControls__enable__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__-has-base64-5-\",\"Success\":\"Button__Success__-has-base64-5-\",\"Danger\":\"Button__Danger__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__-has-base64-5-\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__-has-base64-5-\",\"load7\":\"Spinner__load7__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__-has-base64-5-\",\"Input\":\"ContactData__Input__-has-base64-5-\",\"media\":\"ContactData__media__-has-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__-has-base64-5-\"};","const aux = (props) => props.children;\r\n\r\n\r\nexport default aux;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.css'\r\n\r\nconst logo = (props) => (\r\n\t<div className={classes.Logo}>\r\n\t\t<img src={burgerLogo} alt=\"BurgerLogo\" />\r\n\t</div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n           to={props.link}\r\n           exact={props.exact}\r\n           activeClassName={classes.active}>\r\n           {props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n\r\n\t<ul className={classes.NavigationItems}>\r\n\t\t<NavigationItem link='/' exact>Burger Builder</NavigationItem>\r\n\t\t<NavigationItem link='/orders' >Orders</NavigationItem>\r\n\t</ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.css'\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked} >\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n\t<header className={classes.Toolbar}>\r\n\t\t<DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n\t\t<nav className={classes.DesktopOnly}>\r\n\t\t\t<NavigationItems/>\r\n\t\t</nav>\r\n\t</header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react'\r\n\r\nimport classes from './Backdrop.css'\r\n\r\nconst backdrop = (props) => (\r\n\tprops.show ? <div className= {classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxx/Auxx';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n            <Aux>\r\n                <Backdrop show={props.open} clicked={props.closed} />\r\n                <div className={attachedClasses.join(' ')}>\r\n                    <div className={classes.Logo}>\r\n                        <Logo />\r\n                    </div>\r\n                    <nav>\r\n                        <NavigationItems />\r\n                    </nav>\r\n                </div>\r\n            </Aux>\r\n        );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\n\r\nimport Aux from '../Auxx/Auxx';\r\nimport classes from './Layout.css'\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n\trender () {\r\n\t\tlet ingredient = null;\r\n\r\n\t\tswitch (this.props.type) {\r\n\t\t\tcase ('bread-bottom'):\r\n\t\t\t\tingredient = <div className={classes.BreadBottom}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ('bread-top'):\r\n\t\t\t\tingredient = (<div className={classes.BreadTop}>\r\n\t\t\t\t\t\t<div className={classes.Seeds1}></div>\r\n\t\t\t\t\t\t<div className={classes.Seeds2}></div>\r\n\t\t\t\t\t</div>);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ('meat'):\r\n\t\t\t\tingredient = <div className={classes.Meat}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ('cheese'):\r\n\t\t\t\tingredient = <div className={classes.Cheese}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ('salad'):\r\n\t\t\t\tingredient = <div className={classes.Salad}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ('bacon'):\r\n\t\t\t\tingredient = <div className={classes.Bacon}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tingredient = null;\r\n\t\t\t}\r\n\r\n\t\treturn ingredient;\r\n\t}\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n\ttype: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n\tlet transformIngredients = Object.keys(props.ingredients)\r\n\t\t\t\t\t\t\t\t\t.map(igKey => {\r\n\t\t\t\t\t\t\t\t\t\treturn [...Array( props.ingredients[igKey] )].map((_, i ) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <BurgerIngredient key={igKey + i} type={igKey} />;\r\n\t\t\t\t\t\t\t\t\t\t}); \r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.reduce((arr, el) => {\r\n\t\t\t\t\t\t\t\t\t\treturn arr.concat(el)\r\n\t\t\t\t\t\t\t\t\t}, []);\r\n\t\t\t\t\t\t\t\t\tconsole.log(transformIngredients);\r\n\tif (transformIngredients.length === 0) {\r\n\t\ttransformIngredients = <p>Please start adding ingredients!</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={classes.Burger}>\r\n\t\t\t\t<BurgerIngredient type=\"bread-top\" />\r\n\t\t\t\t{transformIngredients}\r\n\t\t\t\t<BurgerIngredient type=\"bread-bottom\" />\r\n\t\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.css'\r\nconst buildControl = (props) => (\r\n\t\t<div className={classes.BuildControl}>\r\n\t\t\t<div className={classes.Label}>{props.label}</div>\r\n\t\t\t<button \r\n\t\t\t\tclassName={classes.Less}\r\n\t\t\t\tonClick={props.removed}\r\n\t\t\t\tdisabled={props.disabled}>Less</button>\r\n\t\t\t<button \r\n\t\t\t\tclassName={classes.More} \r\n\t\t\t\tonClick={props.added}>More</button>\r\n\t\t</div>\r\n\t);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n\t{ label: 'Salad', type: 'salad'},\r\n\t{ label: 'Bacon', type: 'bacon'},\r\n\t{ label: 'Cheese', type: 'cheese'},\r\n\t{ label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n\t\t<div className={classes.BuildControls}>\r\n\t\t\t<p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n\t\t\t{controls.map(ctrl => (\r\n\t\t\t\t<BuildControl \r\n\t\t\t\t\tkey={ctrl.label}\r\n\t\t\t\t\tlabel={ctrl.label}\r\n\t\t\t\t\tadded={() => props.ingredientAdded(ctrl.type)} \r\n\t\t\t\t\tremoved={() => props.ingredientRemoved(ctrl.type)}\r\n\t\t\t\t\tdisabled={props.disabled[ctrl.type]} />\r\n\t\t\t\t))}\r\n\t\t\t<button \r\n\t\t\t\tclassName={classes.OrderButton}\r\n\t\t\t\tdisabled={!props.purchasable}\r\n\t\t\t\tonClick={props.ordered}>ORDER NOW</button>\r\n\t\t</div>\r\n\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/Auxx/Auxx';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n\t}\r\n\r\n\tcomponentWillUpdate() {\r\n\t\tconsole.log('Modal did update');\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<Aux>\r\n\t\t\t\t<Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n\t\t\t\t<div className={classes.Modal}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n\t\t\t\t\topacity: this.props.show ? '1' : '0',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</Aux>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.css'\r\n\r\nconst button = (props) => (\r\n\t\t<button \r\n            disabled={props.disabled}\r\n\t\t\tclassName={[classes.Button, classes[props.btnType]].join(' ')} \r\n\t\t\tonClick={props.clicked}>{props.children}</button>\r\n\t);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from  '../../../hoc/Auxx/Auxx';\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component {\r\n\tcomponentDidUpdate() {\r\n\t\tconsole.log('[OrderSummary], componentDidUpdate')\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst ingredientSummary = Object.keys(this.props.ingredients)\r\n\t\t\t.map(igKey => {\r\n\t\t\t\treturn (<li key={igKey}>\r\n\t\t\t\t\t<span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n\t\t\t\t\t</li>);\r\n\t\t\t});\r\n\r\n\t\treturn (<Aux>\r\n\t\t\t\t\t<h3>Your Order</h3>\r\n\t\t\t\t\t<p>A delicious burger with the following ingredients:</p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{ingredientSummary}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n\t\t\t\t\t<p>Continue to Checkout?</p>\r\n\t\t\t\t\t<Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n\t\t\t\t\t<Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n\t\t\t\t</Aux>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (<div className={classes.Loader}>Loading...</div>);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport Aux from '../Auxx/Auxx';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptors = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptors = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount () {\r\n            axios.interceptors.request.eject(this.reqInterceptors);\r\n            axios.interceptors.request.eject(this.resInterceptors);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                 <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                    >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-ebe73.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from  '../../hoc/Auxx/Auxx';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n\tstate = {\r\n\t\tpurchasing: false,\r\n\t\tloading: false,\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// axios.get('/ingredients.json')\r\n\t\t// .then(response => {\r\n\t\t// \tthis.setState({ingredients: response.data})\r\n\t\t// })\r\n\t\t// .catch(error => {\r\n\t\t// \tthis.setState({error: true})\r\n\t\t// });\r\n\t}\r\n\r\n\tupdatePurchaseState(ingredients) {\r\n\t\tconst sum = Object.keys(ingredients)\r\n\t\t\t.map(igKey => {\r\n\t\t\t\treturn ingredients[igKey];\r\n\t\t\t})\r\n\t\t\t.reduce((sum, el) => {\r\n\t\t\t\treturn sum + el;\r\n\t\t\t}, 0);\r\n\r\n\t\treturn sum > 0;\r\n\t}\r\n\r\n\tpurchaseHandler = () => {\r\n\t\tthis.setState({purchasing: true});\r\n\t}\r\n\r\n\tpurchaseCancelHandler = () => {\r\n\t\tthis.setState({purchasing: false});\r\n\t}\r\n\r\n\tpurchaseContinueHandler = () => {\r\n\t\tthis.props.history.push('/checkout')\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst disabledInfo = {\r\n\t\t\t...this.props.ings\r\n\t\t};\r\n\r\n\t\tlet orderSummary = null;\r\n\t\tlet burger = this.state.error ? <p>Ingredients can't be loaded!</p> :  <Spinner />;\r\n\r\n\t\tfor (let key in disabledInfo) {\r\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0\r\n\t\t}\r\n\r\n\t\tif (this.state.loading) {\r\n\t\t\torderSummary = <Spinner />;\r\n\t\t}\r\n\r\n\t\tif (this.props.ings) {\r\n\t\t\t burger = (\r\n\t\t\t\t<Aux>\r\n\t\t\t\t\t<Burger ingredients={this.props.ings} />\t\r\n\t\t\t\t\t<BuildControls \r\n\t\t\t\t\t\tingredientAdded={this.props.onIngredientAdded}\r\n\t\t\t\t\t\tingredientRemoved={this.props.onIngredientRemoved}\r\n\t\t\t\t\t\tdisabled={disabledInfo} \r\n\t\t\t\t\t\tpurchasable={this.updatePurchaseState(this.props.ings)}\r\n\t\t\t\t\t\tordered={this.purchaseHandler}\r\n\t\t\t\t\t\tprice={this.props.totalPrice}/>\r\n\t\t\t\t</Aux>)\r\n\r\n\t\t\torderSummary = <OrderSummary \r\n\t\t\t\t\t\tingredients={this.props.ings}\r\n\t\t\t\t\t\tprice={this.props.totalPrice}\r\n\t\t\t\t\t\tpurchaseCancelled={this.purchaseCancelHandler}\r\n\t\t\t\t\t\tpurchaseContinued={this.purchaseContinueHandler} />;\r\n\t\t}\r\n\r\n\t\tif (this.state.loading) {\r\n\t\t\torderSummary = <Spinner />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t\t<Aux>\r\n\t\t\t\t<Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n\t\t\t\t\t{orderSummary}\r\n\t\t\t\t</Modal>\r\n\t\t\t\t\t{burger}\r\n\t\t\t\t</Aux>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tings: state.ingredients,\r\n\t\ttotalPrice: state.totalPrice\r\n\t};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n\t\tonIngredientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger'; \r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n            <div className={classes.CheckoutSummary}>\r\n                <h1>We hope it tastes well!</h1>\r\n                <div style={{width: '100%', height: '300px', margin: 'auto'}}>\r\n                    <Burger ingredients={props.ingredients} />\r\n                </div>\r\n                <Button \r\n                    btnType=\"Danger\" \r\n                    clicked={props.checkoutCancelled}>CANCEL</Button>\r\n                <Button \r\n                    btnType=\"Success\"\r\n                    clicked={props.checkoutContinue}>CONTINUE</Button>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input') :\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')}\r\n                            {...props.elementConfig} \r\n                            value={props.value}\r\n                            onChange={props.changed}/>\r\n            break;\r\n        case ('textarea'): \r\n            inputElement = <textarea \r\n                            className={inputClasses.join(' ')}\r\n                            {...props.elementConfig}\r\n                            value={props.value}\r\n                            onChange={props.changed}/>\r\n            break;\r\n        case ('select'): \r\n            inputElement = (<select\r\n                                className={inputClasses.join(' ')}\r\n                                value={props.value}\r\n                                onChange={props.changed}  \r\n                            >\r\n                                {props.elementConfig.options.map(option => (\r\n                                    <option \r\n                                        key={option.value} \r\n                                        value={option.value}>\r\n                                        {option.displayValue}\r\n                                    </option>\r\n                                    ))}\r\n                               \r\n                           </select>)\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')}\r\n                            {...props.elementConfig}\r\n                            value={props.value}\r\n                            onChange={props.changed}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            street :{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            zipcode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zipcode'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            email: {\r\n                elementType: 'email',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your E-mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            deliverMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'},\r\n                    ]\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: true,\r\n            }\r\n        },\r\n        formIsValid: false,\r\n        loading: false,\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        const formData = {};\r\n        for (let formElementidentifier in this.state.orderForm) {\r\n            formData[formElementidentifier] = this.state.orderForm[formElementidentifier].value\r\n        }\r\n        const order = {\r\n         ingredients: this.props.ings,\r\n         price: this.props.price,\r\n         orderData: formData,\r\n        }\r\n\r\n        axios.post('/orders.json', order)\r\n        .then(response => {\r\n            this.setState({loading: false});\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error => {this.setState({loading: false})});\r\n\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (!rules) { return true; }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm,\r\n        }\r\n\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        }\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifiers in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        \r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const  formElementsArray = [];\r\n            for (let key in this.state.orderForm) {\r\n                formElementsArray.push({\r\n                    id: key,\r\n                    config: this.state.orderForm[key],\r\n                })\r\n            }\r\n        let form = ( <form onSubmit={this.orderHandler}>\r\n                        {\r\n                            formElementsArray.map(formElement => (\r\n                                  <Input \r\n                                    key={formElement.id}\r\n                                    elementType={formElement.config.elementType} \r\n                                    elementConfig={formElement.config.elementConfig} \r\n                                    value={formElement.config.value}\r\n                                    invalid={!formElement.config.valid}\r\n                                    shouldValidate={formElement.config.validation}\r\n                                    touched={formElement.config.touched}\r\n                                    changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                                ))\r\n                        }\r\n                        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n                    </form>);\r\n        if (this.state.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        return (\r\n                <div className={classes.ContactData}>\r\n                    <h4>Enter your Contact Data</h4>\r\n                    {form}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients,\r\n        price: state.totalPrice\r\n    }   \r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactData);\r\n","import React, {Component} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <CheckoutSummary \r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelHandler}\r\n                        checkoutContinue={this.checkoutContinuedHandler}\r\n                         />\r\n                    <Route path={this.props.match.url + '/contact-data'} \r\n                           component={ContactData} />     \r\n                        \r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React, {Component} from 'react';\r\n\r\nimport classes from './Order.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName, \r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n        style={{\r\n            textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid #ccc',\r\n            padding: '5px' }}\r\n        key={ig.classname}>{ig.name} ({ig.amount})</span>\r\n    })\r\n\r\n    return (\r\n        <div  className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport classes from './Orders' \r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true,\r\n    }\r\n    componentDidMount() {\r\n        axios.get('./orders.json')\r\n        .then(res => {\r\n            \r\n            const fetchOrders = [];\r\n\r\n            for (let key in res.data) {\r\n                fetchOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            this.setState({loading: false, orders: fetchOrders});\r\n        })\r\n        .catch(err => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Orders}>\r\n                {this.state.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients} \r\n                        price={order.price}/>\r\n                    ))}\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n          <Layout>\n            <Switch>\n                <Route path=\"/checkout\" component={Checkout} />\n                <Route path=\"/orders\" component={Orders} />\n                <Route path=\"/\" exact component={BurgerBuilder} />\n            </Switch>\n          </Layout>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    totalPrice: 4,\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n};\r\n\r\nconst burgerBuilderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: \r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n             return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] - 1\r\n                },\r\n                 totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default burgerBuilderReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport * as registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\n\nconst store = createStore(burgerBuilderReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    );\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker.unregister();\n"],"sourceRoot":""}